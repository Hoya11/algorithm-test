// 문제 설명
// 문자열 s의 길이가 4 혹은 6이고, 숫자로만 구성돼있는지 확인해주는 함수, solution을 완성하세요.
// 예를 들어 s가 "a234"이면 False를 리턴하고 "1234"라면 True를 리턴하면 됩니다.

// 제한 사항
// s는 길이 1 이상, 길이 8 이하인 문자열입니다.


// 입출력 예
// s	    return
// "a234"	false
// "1234"	true


// 1. 길이가 4 or 6
// 2. 숫자로만 구성되있으지 




function solution(s){
    let answer = parseInt(s); 
     // parseInt()는  문자열을 정수로 바꾸는 함수

      if((s.length === 4 || s.length === 6) && s == answer) {
       // 문자열 길이가 4 or 6 이면서 parseint이면
       // (만약 s가 a123으로 parseInt 함수가 적용되면 NaN)
       // ( s = 12a4 여도 124만 입력되기때문에 4 or 6 길이에 적합 x)
        answer = true;
      } else {
        answer = false;
      }
      return answer;
    }


console.log(solution("a234"));
console.log(solution("1234"));


// parseFloat() 는 문자열을 실수로 바꾸는 함수입니다.
// parseInt() 는 문자열을 정수로 바꾸는 함수입니다.


// parseInt("10"); // 10
// 문자열 "10"을 숫자로 변환하여 정수 10을 리턴합니다.

// parseInt("-10"); // -10
// 문자열 "-10"을 숫자로 변환하여 정수 음수 -10을 리턴합니다.

// parseInt("10.9"); // 10
// 문자열 타입의 실수값은 소수점을 제거한 후, 정수값만 리턴합니다.

// parseInt(10); // 10
// 파라미터로 문자열이 아닌 다른 타입의 값이 전달되면, 
// 파라미터를 문자열로 변환하여 처리합니다.

// parseInt("10n"); // 10

// parseInt("10nnn13"); // 10
// 문자열의 첫글자가 숫자이고, 그 이후에 숫자가 아닌 다른 문자열이 나올 경우
// 숫자가 아닌 문자 이후의 값은 무시하고,
// 그 이전의 숫자만 정수로 변환합니다.

// parseInt("    10"); // 10
// 문자열의 첫글자는 반드시 숫자여야 하지만, 처음에 오는 공백 문자는 허용됩니다.

// parseInt("10      "); // 10
// 문자열의 첫글자가 숫자이면, 뒤에 오는 공백은 무시됩니다.

// parseInt("k10"); // NaN
// 문자열의 첫글자가 숫자가 아니면, NaN(Not a Number)를 리턴합니다.

// parseInt(""); // NaN
// 문자열에 공백이 입력되면, 문자열의 첫 글자가 숫자가 아니므로,
// NaN(Not a Number)를 리턴합니다.
